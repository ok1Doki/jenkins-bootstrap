import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
    id 'base'
    id 'com.palantir.docker' version '0.31.0'
    id 'com.palantir.docker-run' version '0.31.0'
    id 'pl.allegro.tech.build.axion-release' version '1.10.1'
}

project.version = scmVersion.version

def props = new Properties()
file(".env").withInputStream { props.load(it) }

docker {
    name "${project.name}:${project.version}"
    files "plugins.txt", "seedJob.xml", "jenkins-casc.yml"
}

Process process
var currentOS = DefaultNativePlatform.getCurrentOperatingSystem()
if (currentOS.isWindows() || currentOS.isMacOsX()) {
    process = "docker run --rm -v /var/run/docker.sock:/var/run/docker.sock alpine stat -c %g /var/run/docker.sock".execute()
} else if (currentOS.isLinux()) {
    process = "stat -c %g /var/run/docker.sock".execute()
} else {
    throw new GradleException("Unsupported operating system. No way to find group of /var/run/docker.sock.")
}

def out = new ByteArrayOutputStream()
process.waitForProcessOutput(out, System.err)
String dockerSockGroupId = out.toString().trim()

dockerRun {
    // https://github.com/palantir/gradle-docker
    name "${project.name}"
    image "${project.name}:${project.version}"
    ports '8080:8080'
    clean true
    daemonize false
    arguments '-v', "/var/run/docker.sock.raw:/var/run/docker.sock",
            '-v', 'jenkinsvol1:/var/jenkins_home',
            '--env-file', '.env',
            '--group-add', dockerSockGroupId
}